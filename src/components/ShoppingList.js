import { plantList } from '../datas/plantList'

function ShoppingList() {
	const categories = plantList.reduce(
		(acc, plant) =>
			acc.includes(plant.category) ? acc : acc.concat(plant.category),
		[]
	)

	// reduce : Cette m√©thode est utilis√©e pour transformer plantList en un tableau de cat√©gories uniques.
	// acc : L'accumulateur, qui commence comme un tableau vide [].
	// plant : Chaque √©l√©ment du tableau plantList.
	// Fonction callback :
	// acc.includes(plant.category) : V√©rifie si la cat√©gorie de la plante est d√©j√† dans l'accumulateur.
	// acc : Si la cat√©gorie est d√©j√† pr√©sente, on retourne l'accumulateur tel quel.
	// acc.concat(plant.category) : Si la cat√©gorie n'est pas pr√©sente, on l'ajoute √† l'accumulateur.
	// R√©sultat : categories sera un tableau de cat√©gories uniques extraites de plantList

	return (
		<div>
			<ul>
				{categories.map((cat) => (
					<li key={cat}>{cat}</li>
				))}
			</ul>
			<ul>
				{plantList.map((plant) => (
					<li key={plant.id}>
						{plant.name} {plant.isBestSale ? <span>üî•</span> : null}
					</li>
				))}
			</ul>
		</div>
	)
}

export default ShoppingList